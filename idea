### **pp Concept: "Pact"**

**The Pitch:** Pact is a social accountability app where friends put money on the line to build habits together. Succeed, and you get your money back. Falter, and your money goes to the friends who kept the pact or, optionally, to a charity of the group's choice. By integrating seamless Web3 technology on the Base blockchain, Pactify makes these financial stakes secure, transparent, and easy to manage.

---

### **I. The End-to-End User Flow (The Core Loop)**

1. **Onboarding & Wallet Creation:** A new user signs up for Pactify using their email or social account. In the background, **Privy** creates a secure, non-custodial cryptocurrency wallet for them on the **Base** network, requiring no complex setup from the user. [DONE]
2. **Creation:** A user (the "Creator") defines a new challenge or "Pact," including the rules and stakes. They also choose the final payout rule: "Split Among Winners" or "Donate to Charity." [IP]
3. **Invitation:** The Creator invites friends from their contact list or social circle with a unique link. [TODO]
4. **Commitment (The On-Ramp):** Invited friends receive the Pact details. To join, they deposit the agreed-upon stake (as USDC) into the Pact's secure smart contract. They have two easy ways to do this:
    - **Apple Pay:** Use a standard Apple Pay transaction to have their fiat money automatically converted to USDC and deposited (**on-ramped**).
    - **Crypto:** Pay directly with existing USDC from their Pactify (Privy) wallet or any other compatible crypto wallet.
5. **Execution & Tracking:** The Pact begins. Participants log their progress according to the rules. The app tracks who is compliant and who is not.
6. **Conclusion & Payout:** The Pact ends. The app automatically triggers the smart contract to execute the pre-defined payout rule. Winnings in USDC are instantly sent to the winners' wallets, or the entire pot is transferred to the chosen charity's address.

---

### **II. Feature Deep Dive & Logic**

### **1. Creating a New Pact**

This is the most critical screen. Clarity here is key.

- **Pact Name:** Simple text field (e.g., "Morning Meditation Crew," "Project 50k Steps").
- **Stakes (Deposit Amount):** A numerical input for the amount (in USD, which will be handled as USDC) each person must deposit. Let's call this amount D.
- **Duration:** Select a number of days (e.g., 7 days, 14 days max).
- **Challenge Type:**
    - **Type A: Daily Check-in:** Requires a log every single day.
        - *Use Case:* "Meditate for 10 mins daily," "Journal one page every morning."
    - **Type B: Cumulative Goal:** Requires achieving a total target by the end date.
        - *Use Case:* "Walk 50,000 steps in a week," "Read 200 pages in 10 days."
- **Evidence & Logging Method:**
    - **Text Post:** A simple text update.
    - **Photo/Video Proof:** "Post a picture of your workout summary."
    - **Fitness API (Automatic):** Connect to Apple Health. The app automatically pulls and verifies the relevant data. This is the best option for fitness goals.
    - **Honor System with Group Vote:** For subjective goals like "Practice guitar for 30 minutes."
- **The Payout Rule:** A clear choice is presented to the Creator:
    - **Split Among Winners (Default):** *Description: "Friends who successfully complete the pact will split the entire pot, including all forfeited stakes."*
    - **Donate to Charity:** *Description: "The entire pot, including all initial stakes and forfeited funds, will be donated to a chosen charity. Win or lose, all the money goes to a good cause."*
        - If selected, a second step appears: **"Choose a Charity."** This will display a searchable list of pre-vetted, verified non-profit organizations, populated via **The Giving Block's API**. The Creator must select one.

### **2. Joining a Pact & Onboarding**

This section details how users sign up and deposit funds into a pact.

- **User Onboarding with Privy:**
    - A new user signs up with an email or social login (e.g., "Continue with Apple").
    - The **Privy SDK** seamlessly creates a secure, non-custodial wallet on the **Base** blockchain in the background. The user experience is as simple as logging into any standard app.
- **Depositing a Stake:**
    - After accepting a Pact invitation, the user is prompted to deposit their stake. They are presented with two clear options:
        - **Pay with Apple Pay:** This is the primary **fiat on-ramp**. The app will integrate a service like **Stripe** or **Coinbase Onramp**. The user sees a standard Apple Pay sheet. Behind the scenes, the service takes their USD payment, converts it to USDC on the Base network, and deposits it directly into the Pact's smart contract address. This is a seamless, one-tap process for non-crypto users.
        - **Pay with Crypto:** This option is for existing crypto users. It will display the smart contract's address and a QR code. The user can then use their Pactify (Privy) wallet or another wallet like MetaMask to send the required amount of USDC to the Pact.

### **3. Tracking & Participation**

- **Challenge Dashboard:** A central hub for each Pact showing:
    - The remaining time.
    - The current size of the Pot (e.g., "$120 Pot" or "$120 Raised for [Charity Name]").
    - A feed of everyone's updates (photos, posts, etc.).
    - A leaderboard/status view of who is "On Track," "At Risk," or "Out."
- **Handling Cumulative Goals (e.g., 50k steps in a week):**
    - The app's primary concern is the final number at the end of the duration. The Apple Health API syncs in the background. The user does not need to post every day. They have completed the Pact as long as their tracker shows ≥50,000 steps by the deadline.
- **Handling Daily Goals (e.g., "Meditate Daily"):**
    - A user **must** log their activity before a set time each day (e.g., 11:59 PM in their local timezone). If they miss the log, the penalty system is triggered automatically by the app's backend server.

### **4. Penalties & Payouts**

This must be transparent and automated via the smart contract, triggered by the app's backend.

- **Missing a Daily Log (Strike System):**
    - **Strike 1:** The user misses one daily log. A penalty of 20% of their initial deposit (0.20×D) is immediately forfeited from their stake within the smart contract and added to the main Pot. They are now "At Risk."
    - **Strike 2:** The user misses a second daily log. They are now ejected from the challenge. Their remaining 80% (0.80×D) is forfeited to the Pot. They can now only view the challenge as a spectator.
- **Leaving a Challenge Early:**
    - A user can choose to leave at any time via a "Surrender" button. A fixed penalty of 25% of their deposit (0.25×D) is forfeited to the Pot, and the rest is returned to their wallet.
- **Final Payout:**
    - **If "Split Among Winners" was chosen:** The app's backend provides the list of winning addresses to the smart contract, which then automatically calculates and distributes the entire pot evenly among the winners. Winners receive USDC in their Privy wallets.
        - **Path A (Split Among Winners):**
            1. Backend determines the list of `winnerAddresses`.
            2. Backend calls the `triggerPayout(winnerAddresses)` function on the smart contract.
            3. The smart contract divides the total USDC pot and transfers the funds to the winners' Privy wallets.
    - **If "Donate to Charity" was chosen:** The app's backend triggers a function in the smart contract that transfers the entire pot to the pre-selected charity's verified wallet address. All participants are notified of the successful donation.
        - **Path B (Donate to Charity):**
            1. The pact concludes. The success or failure of individuals doesn't change the outcome, but it's still tracked for their personal stats.
            2. The backend identifies the pre-selected charity's verified wallet address.
            3. Backend calls a new, separate function on the smart contract: `triggerDonation(charityAddress)`.
            4. The smart contract transfers the *entire pot* in a single transaction to the charity's wallet.
            5. The app shows a "Congratulations!" screen to all participants, celebrating the total amount raised.
    
    ### **Edge Case: Total Pact Failure (Nwinners=0)**
    
    In the event that no participant successfully completes the challenge, the following rules apply:
    
    1. **If the Payout Rule was "Split Among Winners":**
        - **Outcome:** The entire Potfinal is automatically transferred to the **Pactify Community Fund**.
        - **Definition:** The Pactify Community Fund is a dedicated fund managed by Pactify for charitable purposes. The designated charity receiving these funds will be clearly stated on the Pactify website and in the app.
        - **Rationale:** This ensures that funds are never "stuck" or perceived as being unfairly kept by the company. It transforms a collective failure into a positive social impact, reinforcing the community ethos. This rule will be explicitly stated in the Terms of Service.
        - **User Notification:** *"Pact Complete. Unfortunately, there were no winners. As per Pactify's community rules, the entire pot of [Potfinal] has been donated to the Pactify Community Fund."*
    2. **If the Payout Rule was "Donate to Charity":**
        - **Outcome:** The result is unchanged. The entire Potfinal is transferred to the specific charity chosen by the Creator at the beginning of the pact.
        - **Rationale:** The primary goal of this pact type was to fundraise. This goal is achieved regardless of the participants' individual success or failure.
        - **User Notification:** *"Pact Complete! Your group successfully raised [Potfinal] for [Chosen Charity Name]. Thank you for your commitment!"*

### **5. The Consensus Vote (Manual Verification)**

- This is a great solution for non-quantifiable goals.
- **The Voting Period:** Once the Pact duration ends, a 24-hour voting period begins.
- **The Ballot:** Each participant gets a screen with a list of all other members and votes "Yes" (Completed) or "No" (Did Not Complete) for each.
- **The Verdict:** A user is considered a "Winner" if a majority (>50%) of the other participants vote "Yes" for them. The Pact Creator has the final "tie-breaker" vote.

### **Notifications (The "Real-Like" Nudges)**

- **Reminders:** "Don't forget to log your meditation for today! Only 3 hours left."
- **Social Nudges:** "You haven't logged your workout yet. Want to give [Friend's Name] a nudge to keep them on track?"
- **Positive Reinforcement:** "[Friend's Name] just completed their goal for the day! Send them some kudos."
- **Progress Updates:** "You're 75% of the way to your 50k step goal. You've got this!"
- **Financial Updates:** "Heads up! The winner's pot just increased. Someone just forfeited their stake."

### **6. User Profile**

- **Name & Picture**
- **Key Stats:**
    - Pacts Completed
    - Success Rate (%)
    - Total Winnings ($)
- **Friends List**
- **Connected Accounts:** Links to social media and indicators for connected fitness trackers (Apple Health, Google Fit).
- **Trophy Case:** A visual showcase of successfully completed Pact badges.

### **Business Model**

- **Core Revenue Stream:** The app will take a **5% commission** from the total pot of "Split Among Winners" pacts *only if there are forfeitures*.
    - **Example:** In a $100 pact where one person fails, the pot becomes $120. The winners split $114 (95%), and the app earns $6 (5%).
    - If everyone succeeds, the app takes $0. This aligns the app's success with user engagement and the core value proposition.
- We can get a grant from base or if we wanna build on solana, solana can give a grant

